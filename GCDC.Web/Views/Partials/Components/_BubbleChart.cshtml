@using GCDC.Common.Models.CMS;
@using GCDC.Common.Helpers
@model GCDC.Common.Models.CMS.BubbleChart;

@{
    var ViewName = ViewContext.ExecutingFilePath;
}

@if (Model != null)
{
    @using (new FunctionTracer(false, Model.Name))
    {
        try
        {
            <div id="@Model.SectionNameForMenu.GetHtmlEncodedString()" @GCDC.Common.Helpers.Constants.cms_component_name ="@Model.Name" @Constants.cms_page_view_name ="@ViewName">
                <div class="section" id="section3">
                    <div class="content-wrapper">
                        <div class="container">
                            <h3 data-animation-scroll="lineReveal" class="heading3">@Model?.Headline</h3>
                        </div>

                        <div class="promise">

                            @{
                                int count = 0;
                                int maxCount = Model.BubbleItemsPicker.ToList().Count();
                            }
                            @if (Model.BubbleItemsPicker != null && Model.BubbleItemsPicker.Any())
                            {
                                <div class="marquee" style="--marquee-count: @maxCount; --marquee-speed: 50">
                                    @foreach (BubbleChartItem mediaCard in Model.BubbleItemsPicker)

                                    {

                                        <div class="text-card marquee__item" style="--marquee-item-index: @count">
                                            <div class="icon">
                                                <svg width="41"
                                                     height="40"
                                                     viewBox="0 0 41 40"
                                                     fill="none"
                                                     xmlns="http://www.w3.org/2000/svg">
                                                    <g id="Frame 1000004777">
                                                        <path class="center"
                                                              id="Vector"
                                                              d="M20.105 31.0815C23.4506 26.7149 27.1535 22.8946 31.9812 19.9212C27.3235 16.7421 23.2868 13.2647 20.1538 8.71501C16.8124 13.0938 13.1351 16.912 8.2901 19.8706C12.8964 23.0322 16.9624 26.5055 20.105 31.0815Z"
                                                              fill="#A97D46"
                                                              stroke="#A97D46"
                                                              stroke-width="0.5" />
                                                        <path class="border"
                                                              id="Vector_2"
                                                              d="M20.1816 38.5793C25.6935 31.2787 31.7893 24.9083 39.7786 19.979C32.0718 14.6821 25.4129 8.89714 20.2745 1.28899C14.7688 8.61041 8.71649 14.9769 0.697895 19.8808C8.31849 25.1485 15.0276 30.9266 20.1816 38.5793Z"
                                                              stroke="#A97D46"
                                                              stroke-width="0.5" />
                                                    </g>
                                                </svg>
                                            </div>
                                            <div class="text-sec">
                                                <p class="body1 para">
                                                    @mediaCard?.Description
                                                </p>
                                            </div>
                                            <div class="pattner">

                                                <img src="https://gcdc-be.projectuatserver.com/media/qdqag1lj/card-pattern.png">

                                            </div>
                                        </div>
                                        count++;
                                    }
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </div>

        }
        catch
        {
            throw;
        }
    }
}