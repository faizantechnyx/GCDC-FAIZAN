@using GCDC.Common.Models.CMS
@using GCDC.Common.Helpers;
@model GCDC.Common.Models.Api.Response.SearchListing
@using GCDC.Core.Repositories.Common
@using Umbraco.Cms.Core.Models.PublishedContent
@inject IBaseControllerFactory factory;

@{
    var newsItems = Model.Records as IEnumerable<NewsItem>;
}

@if (newsItems != null && newsItems.Any())
{
    <input type="hidden" value="@newsItems.Count()" id="TotalResults" />

    @foreach (NewsItem item in newsItems)
    {
        var hasImage = item?.BackgroundImage != null;
        var category = item?.MediaCategoryPicker as NewsCategoryItem;

        <div class="listingWrapper element-item">
            <a href="@item?.GetDetailPageUrl()">
                <div class="card_box grid-view-item js-grid-view-item @(hasImage ? "" : "card_with_noImg")">
                    <div class="tag">
                        <p class="body1 tag--label">@category?.CategoryName</p>
                    </div>
                    @if (hasImage)
                    {
                        <div class="img-sec">
                            <img src="@item?.BackgroundImage.GetMediaUrl()" alt="@item?.Alt">
                        </div>
                    }
                    <div class="content_box">
                        <div class="main-title">
                            <div class="list_tag">
                                <p class="body1 tag--label">@category?.CategoryName</p>
                            </div>
                            <div class="title">
                                <h5 class="heading5 card_main_title">
                                    @Html.Raw(item?.Headline)
                                </h5>
                            </div>
                        </div>
                        <div class="decription_wrapper">
                            <div class="content__wrap">
                                <div class="pera-sec">
                                    <p class="body2 description">
                                        @item?.ShortDescription
                                    </p>
                                </div>
                                <div class="meta_wrapper">
                                    <div class="bottom_tagline">
                                        <p class="body1 card_meta">
                                            @item?.Date.ToString("MMMM dd, yyyy", Constants.currentCulture)
                                        </p>
                                        @if (item?.Parent.Name == "Reports" && item.DownloadReports != null)
                                        {
                                            var fileDetail = Common.GetMediaPickerFileDetails(item.DownloadReports);
                                            var fileExtension = fileDetail.FileExtension;

                                            <p class="body1 card_meta">
                                                <img src="/assets/img/icon/pdf.svg" class="js-tosvg" alt="">
                                                &nbsp;@fileExtension.ToUpper()
                                            </p>
                                            <p class="body1 card_meta">
                                                @($"{Common.GetFileSizeUnit(fileDetail.FileSize)}")
                                            </p>
                                        }
                                    </div>
                                    <div class="action_btn">
                                        @if (item?.Parent.Name == "Reports" && item.DownloadReports != null)
                                        {
                                            <div class="btn_wrap">
                                                <a href="@item.DownloadReports.GetMediaUrl()" download target="_blank" class="btn btn_Icon">
                                                    <p>@Common.GetDictionaryValueOrDefault("Download Report Button")</p>
                                                    <div class="download_iconBox">
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none" class="js-tosvg insvg">
                                                            <path d="M14 10.5V13.1667C14 13.5203 13.8595 13.8594 13.6095 14.1095C13.3594 14.3595 13.0203 14.5 12.6667 14.5H3.33333C2.97971 14.5 2.64057 14.3595 2.39052 14.1095C2.14048 13.8594 2 13.5203 2 13.1667V10.5" stroke="#0D2640" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M4.66602 7.16675L7.99935 10.5001L11.3327 7.16675" stroke="#0D2640" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M8 10.5V2.5" stroke="#0D2640" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                        </svg>
                                                    </div>
                                                </a>

                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </a>
        </div>
    }
}


