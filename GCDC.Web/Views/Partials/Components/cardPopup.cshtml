@using GCDC.Common.Helpers
@using GCDC.Common.Models.CMS
@model GCDC.Common.Models.CMS.CardPopup;
@using GCDC.Core.Repositories.Common
@using Serilog
@using Umbraco.Cms.Core.Models.PublishedContent
@inject IBaseControllerFactory factory;

@{
    var ViewName = ViewContext.ExecutingFilePath;
}

@if (Model != null)
{
    @using (new FunctionTracer(false, Model.Name))
    {
        try
        {
            <section id="@Model.SectionNameForMenu.GetHtmlEncodedString()" class="investment-opportunities" @GCDC.Common.Helpers.Constants.cms_component_name="@Model.Name" @Constants.cms_page_view_name="@ViewName">
                <div class="sec-padded">
                    <div class="container">
                        <div class="wrapper-box">
                            <div class="media-gallery-box">
                                <h3 class="heading3 sec-title">@Model.Heading</h3>

                                <div class="media-listing list-view-listing gridWrapper">
                                    <!-- card item -->
                                    @if (Model.Children != null && Model.Children.Any())
                                    {
                                        foreach (CardPopupItem item in Model.Children)
                                        {
                                            <div class="listingWrapper element-item">
                                                <div class="card_box grid-view-item js-grid-view-item">
                                                    @if (item.Image != null)
                                                    {
                                                        <div class="img-sec">
                                                            <img src="@item.Image.GetMediaUrl()" alt="@item.Name">
                                                        </div>
                                                    }
                                                    <div class="content_box">
                                                        <div class="main-title">
                                                            <div class="title">
                                                                <h5 class="heading5 card_main_title">
                                                                    @item.Title
                                                                </h5>
                                                            </div>
                                                        </div>
                                                        <div class="decription_wrapper">
                                                            <div class="content__wrap">
                                                                <div class="pera-sec">
                                                                    <p class="body2 description">
                                                                        @item.Description
                                                                    </p>
                                                                </div>
                                                                <div class="meta_wrapper">
                                                                    @if (item.Cta != null && !string.IsNullOrEmpty(item.Cta.Url))
                                                                    {
                                                                        <div class="action_btn">
                                                                            @{
                                                                                IPublishedContent popupModel = null;
                                                                                var VariationContextAccessor = factory.GetVariationContextAccessor();
                                                                                VariationContextAccessor.VariationContext = new VariationContext(GCDC.Common.Helpers.Constants.Languages.Default);
                                                                                var isPopup = item?.Cta?.Url?.Contains("#popup") == true;
                                                                                if (isPopup)
                                                                                {
                                                                                    popupModel = Common.GetPopupModel(item.Cta.Url);
                                                                                }
                                                                                if (popupModel != null)
                                                                                {
                                                                                    VariationContextAccessor.VariationContext = new VariationContext(GCDC.Common.Helpers.Constants.Languages.Current);
                                                                                    @await Html.PartialAsync(Constants.ComponentViewLocation + "_FormPopup.cshtml", popupModel)
                                                                                }
                                                                                
                                                                                VariationContextAccessor.VariationContext = new VariationContext(GCDC.Common.Helpers.Constants.Languages.Current);
                                                                            }
                                                                            <div class="btn_wrap @(popupModel != null ? "div_anchor_popup" : "") @( isPopup ? "open-modal-btn-from" : "")" data-modal-id="div_popup_@(popupModel != null ? popupModel.Id : "")">
                                                                                <span class="btn btn_Icon">
                                                                                    <a href="@(isPopup ? "javascript:void(0);" : item.Cta.Url)" class="cta-txt">
                                                                                        @item.ReportButtonText
                                                                                    </a>
                                                                                </span>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
        catch
        {
            throw;
        }
    }
}


